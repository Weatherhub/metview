test, label = "Execute apply with a closure, no parameters",
do = (
    apply, closure = (function, _ = (println, values = FOO)),
           args = (let)
), 
EXPECT = FOO

test, label = Apply parameters to closure,
do = (
    apply,
        closure = (function, of = param, _ = (println, values = ($, _ = param))),
        args = (let, param = FOO)
), 
expect = FOO

test, label = Apply parameters to a deserialized closure,
do = (
    let, x = "some value of x in the dynamic environment"
    apply,
        closure = (closure,
                        name = _,
                        parameters = things / ideas, 
                        captured = (let, x = "the captured value"), 
                        code = (
                                    println, values = "things: " / ($, _ = things) / " ideas: " / ($, _ = ideas) / " captured: " / ($,_ = x)
                                )),
        args    = (let, 
                    things = 1 / 2, 
                    ideas  = foo / bar)

),
expect = "things: " / 1 / 2 /  " ideas: " / foo / bar /  " captured: " / "the captured value"


